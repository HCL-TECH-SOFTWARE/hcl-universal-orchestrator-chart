######################################################################
# Licensed Materials Property of HCL*
# (c) Copyright HCL Technologies Ltd. 2020, 2023. All rights reserved.
#
# * Trademark of HCL Technologies Limited
######################################################################

global:
# enableConsole enables and disables the Dynamic Workload Console deployment. Supported values are true and false.
# enableConsole: false
  # debug enables and disables the debugging mode. Supported values are true and false.
  debug: false

  # license indicates whether you accept the license. Supported values are accept and not accepted. Mandatory parameter.
  license: "not accepted"
  # serviceAccountName is the name of a custom service account to be used for deployments, for example to deploy HCL Workload Automation.
  serviceAccountName:
  # configPlugins is the ConfigMap containing list of plugin to be installed.
  configPlugins: 
  # pluginImageRepository is the name of the repository that contains the image with tags for Automation Hub integrations.
  pluginImageRepository: hclcr.io/uno-ea
  # pluginImageName is the name of the image with tags for Automation Hub integrations.
  pluginImageName: hcl-workload-automation-plugins:2.1.2.0-beta1
  # extraImages is the list of images with tags containing OCLI and agent for download from Dynamic Workload Console or engine.
  extraImages:
    - registry: hclcr.io/uno-ea
      name: hcl-uno-external-pod:2.1.2.0-beta1
  customLabels:
    - name: "environment"
      value: "prod"
  customPodAnnotations:
    env.name: "" 
  customEnv:
  #- name: "MY_ENVKEY"
  #  value: "MY_EN_VALUE"
  #enableTestPrereq: true
  enableUnoAIPilot: false
  # Hcl additional imagePullSecret to add to service account
  hclImagePullSecret:
  dwcconsole:
    # Used to configure an external DWC. Set the name of secret containing the public certificate to verify the JWT token.
    certSecretName:
    # Used to configure an external DWC. Set the name of jwt token issuer
    dwcissuer:
# nameOverride changes the resources names. By default, the release name is used.
nameOverride: ""

database:
  # url is the URL of the database. Mandatory parameter.
  url: mongodb://hcl-uno-db-mongodb.db.svc.cluster.local:27017
  # type is the type of the database. Supported value is mongodb.
  type: mongodb
  # databaseName is the name of the database.
  databaseName: uno
  # username is the name of the database user. Mandatory parameter.
  username: 
  # password is the password of the database user. Mandatory parameter.
  password:
  # tls specifies whether TLS is enabled. Supported values are true and false.
  tls: false
  # tlsInsecure specifies whether certificate validation must be skipped. Supported values are true and false.
  tlsInsecure: false

kafka:
  # url is the URL of the event streaming platform. Mandatory parameter.
  url: hcl-uno-kafka-0.kafka-headless.kafka.svc.cluster.local:9092
  # prefix of topic name
  prefix:
  # username is the name of the kafka user. Mandatory parameter.
  username: 
  # password is the password of the kafka user. Mandatory parameter.
  password:
  # tls specifies whether TLS is enabled. Supported values are true and false.
  tls: false
  # tlsInsecure specifies whether certificate validation must be skipped. Supported values are true and false.
  tlsInsecure: false
  # Kafka sasl mechanism as kafka client configuration provides.
  saslMechanism:
  # Kafka jass config as kafka client configuration provides.
  jaasConfig:
  # Kafka security protocol as kafka client configuration provides.
  securityProtocol:
  #kerberos service name
  kerberosServiceName:
  #Oauth login call back handler class
  oauthLoginCallbackHandlerClass:
  #Oauth token endpoint url
  oauthTokenEndpointUrl:
  # topicReplicas is the number of replicas for the topic.
  topicReplicas: 1
    
eventmanager:
  plugins:
    gcp:
      baseServicePath:

config:
  license:
    # Url of MHS license server
    licenseServerUrl: https://api.hcltechsw.com
    proxy:
      # optional proxy configuration to access the GenAI service.
      hostname:
      port:
      username:
      password:
  genai:
    # Enables the AI Pilot generative AI features. Supported values are true and false.
    # Enabling this feature you agree that AI Pilot prompts are sent to HCL Software and stored for
    # analytics and to improve the product in the future.
    # All information will be handled according to HCL Software privacy policy.
    enabled: false
    # the URL of the GenAI service.
    serviceUrl: https://genai.services.hcluno.cloud
    # apiKey is the custom key to access the GenAI service provided by HCL Software for beta testing.
    apiKey:

    proxy:
      # optional proxy configuration to access the GenAI service.
      hostname:
      port:
      username:
      password:

  registry:
    # name is the name of your registry.
    name:  hclcr.io/uno-ea
    # pullPolicy defines when data is pulled from your event streaming platform. Supported values are Always, Never, IfNotPresent.
    pullPolicy: Always
    # tag is the tag of the image. The default value is latest.
    tag: 2.1.2.0-beta1
  orchestrator:
    # the maximum number of nested workflow in the plan. The subflow jobs exceeding this value will end in FAIL
    maxNestingLevel: 50
  planning:
    # max number of days to generate not active instance
    notActiveWindowMax: P9DT0H
    # min number of days to generate not active instance
    notActiveWindowMin: P7DT0H
    # Frequency to activate not active instances
    activeWindowExtension: PT5M
    # How long is the windows of active instance (how long the plan is)
    activeWindow: PT24H
    # How long is the windows of plan in the past
    daysRetentionPlan: P7DT0H
    # How long is the windows of plan in the past for failed jobs
    daysRetentionFailPlan: P30DT0H
    # Frequency to remove the past failed jobs
    frequencyFailJobCleanUp: PT1H

  engine:
    # justificationsEnabled specifies whether the justification feature is enabled. Supported values are true and false.
    justificationEnabled: false
    # justificationCategoryRequired specifies whether the justification category is mandatory. Supported values are true and false.
    justificationCategoryRequired: false
    # justificationTicketNumberRequired specifies whether the justification ticket number is mandatory. Supported values are true and false.
    justificationTicketNumberRequired: false
    # justificationDescriptionRequired specifies whether the justification description is mandatory. Supported values are true and false.
    justificationDescriptionRequired: false

  encryption:
    # The password or key to encrypt data, such as passwords, agent database, and kafka messages.
    key:

  console:
    # hostname is the hostname of the Dynamic Workload Console.
    hostname:
    # port is the port of the Dynamic Workload Console.
    port:
    # enableLogout specifies whether the new Console logout is enabled. Supported values are true and false.
    enableLogout: false
    # defines the minutes after which the user is considered inactive and gets logged out from the UI. Supported values are integers.
    sessionTimeoutMinutes: 30
  certificates:
    # useCustomizedCert specifies if you use custom certificates or certificates generated by cert-manager. Supported values are true and false. If you set it to false, certificates are defined by the deployment process. If you set it to true, provide the required certificates and customize the parameters listed below. 
    useCustomizedCert: false
    #Ignore SSL hostname verfication. if the certificates of microservices are not generated with the corrent hostname enable this option
    disableHostnameVerification: false
    # customIssuer is the name of the issuer. This parameter applies if you set useCustomizedCert to false. If not specified, a self-signed issuer is created.
    customIssuer:
    # customIngressIssuer is the optional name of the certificate issuer that overrides internal issuer with a specific one to be used only for ingress.
    customIngressIssuer:
    # caPairSecretName is the name of the pair secret. This parameter applies if you set useCustomizedCert to false.
    caPairSecretName: ca-key-pair
    # certSecretName is the name of the secret. This parameter applies if you set useCustomizedCert to false.
    certSecretName: uno-certificate
    # certExtAgtSecretName is the name of the secret of the external agent. This parameter applies if you set useCustomizedCert to true.
    certExtAgtSecretName: uno-certificate-ext-agt
    # caDuration is the duration of the ca certificates before they are set to expire. This parameter applies if you set useCustomizedCert to false.
    caDuration: 26298h
    # caRenewBefore is the time before the ca certificate expires when the certificate manager service begins attempts to renew the certificate. This parameter applies if you set useCustomizedCert to false.
    caRenewBefore: 22332h
    # duration is the duration of the certificates before they are set to expire. This parameter applies if you set useCustomizedCert to false.
    duration: 2160h
    # renewBefore is the time before the certificate expires when the certificate manager service begins attempts to renew the certificate. This parameter applies if you set useCustomizedCert to false.
    renewBefore: 360h
    # organization is the organization label within the certificates. This parameter applies if you set useCustomizedCert to false.
    organization: hcl
    # additionalCASecrets contains secret names for additional CAs, for example to trust MongoDb, Kafka, OIDC certificates.
    additionalCASecrets: 
    #  - secretname1

  apiKey:
    # lifespanWarningDays specifies how many days before API Key expiration you are notified about it.
    lifespanWarningDays: 5 
    # apikeyPersonalExpirationDuration is the amount of time on or after which the Personal API Keys expire. It is calculated starting from API Key creation.
    apikeyPersonalExpirationDuration: P365D
    # apikeyServiceExpirationDuration is the amount of time on or after which the Service API Keys expire. It is calculated starting from API Key creation.
    apikeyServiceExpirationDuration: P365D
    # groupsCacheExpirationDuration is the amount of time on or after which users must login again to the authentication provider to use Personal API Keys.
    groupsCacheExpirationDuration: P30D
    # cleanupFrequencyForPending indicates how often the IAA service checks in the database for API Keys whose token has not been created after the cleanupFrequencyForPending timeout has expired. 
    cleanupFrequencyForPending: PT1M
    # cleanupTimeoutForPending indicates the amount of time after which API Keys must be deleted if the related token has not been created. The maximum supported value is 1 day.
    cleanupTimeoutForPending: PT15M # Maximum allowed value is 1d

  jwt:
    # jwtSecretName is the name of your custom Kubernetes secret used to sign JWTs.
    jwtSecretName:
    # internalExpirationDuration is the amount of time on or after which the internal JWT expires.
    internalExpirationDuration: PT10M

  tracing:
    # enabled specifies whether tracing is enabled. Supported value are true and false.
    enabled: true
    # otelEndpoint is the endpoint to which OpenTelemetry traces are sent.
    otelEndpoint: "http://simplest-collector.default:4317/api/traces"
    # traceAll specifies whether all events are traced. Supported value are true and false. If you set it to true, also internal calls are traced.
    traceAll: false
    
  
  plugins:
    #If the size of the plug-in that needs to be installed exceeds 10 MB, specify a value higher than the plug-in size.
    maxSize:

authentication:
  # adminName is the name of the admin user. The default security policy will be created or updated for that user.
  adminName: "wauser"
  #apiHostname specifies the API gateway hostname and is used only when ingress.enabled is set to false.
  apiHostname: "gateway"
  oidc:
    # connectionTimeout is the amount of time on or after which connection to OIDC provider goes in timeout.
    connectionTimeout: PT1M
    # enabled specifies whether authentication through OpenID Connect (OIDC) server is enabled. 
    # If enabled is set to false, the other properties in this section are ignored.
    enabled: false
    # useToManageApiKeys specifies whether the OpenID Connect (OIDC) server must be used in place of the Dynamic Workload Console to manage API keys (for example, when authentication information expires).
    # Supported values are true and false. 
    useToManageApiKeys: false
    # server is the base URL of the OpenID Connect (OIDC) server. This parameter applies when enabled is set to true.
    server: "https://uno-keycloak-ssl:8843/realms/uno"
    # clientId is the client-id of the application in the OpenID Connect (OIDC) server. This parameter applies when enabled is set to true.
    clientId: "uno-service"
    # credentialSecret is the client secret which is used for a client_secret_basic authentication with OpenID Connect (OIDC) server. This parameter applies when enabled is set to true.
    credentialSecret: "put_oidc_secret_here"
    # encryptTokensInCookie enables the encryption of the tokens before being stored in the cookies. This parameter applies when enabled is set to true.
    encryptTokensInCookie: true
    # splitTokensInCookie set false to keep all OIDC-related tokens (ID, access and refresh) in a single session cookie. Set true to minimize session cookie size. This parameter applies when enabled is set to true.
    splitTokensInCookie: true
    # tlsVerification enables both certificate validation and hostname verification. You can use the config.certificates.additionalCASecrets parameter to add a secret for the OpenID Connect (OIDC) server CA. This parameter only applies when enabled is set to true.
    # Supported values are:
    # "none"                   : All certificates are trusted and hostname verification is disabled
    # "required"               : Certificates are validated and hostname verification is enabled
    # "certificate-validation" : Certificates are validated and hostname verification is disabled
    tlsVerification: "required"

# bulkhead defines the policy to be used on the gateway endpoint for avoiding bulk requests and block DDOS attacks against these contexts.
bulkhead:
  request:
    # maxValue defines the maximum number of concurrent calls to an instance. The value must be greater than 0.
    maxValue: 12
    # waitingTaskQueue defines the maximum number of calls which can be kept waiting in each queue. The value must be greater than 0.
    waitingTaskQueue: 12

routes:
  # enabled specifies whether a Openshift route is enabled to route traffic from external sources to the applications in the cluster. Supported values are true and false.
  enabled: true
  #  specifies whether a Openshift route ssl termination . Supported values are passthrough and reencrypt.
  termination:
ingress:
  # enabled specifies whether an ingress is enabled to route traffic from external sources to the applications in the cluster. Supported values are true and false.
  enabled: true
  # ingressClassName is a unique identifier for the ingress controller.
  ingressClassName: nginx
  # baseDomainName is the name of the base domain for using the ingress controller. This parameter applies if you set enabled to true.
  baseDomainName: ".k8s.uat.uno"
  annotations:
    # For more information, see the ingress controller documentation.
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #    secretName is the name of the secret.
  #  - secretName: chart-example-tls
  #    hosts specifies the names of the hosts to which the secret applies.
  #    hosts:
  #      - chart-example.local


deployment:
  global:
    # debug enables and disables the debugging mode. Supported values are true and false.
    debug: false
    # minTargetReplicas is the minimum number of target replicas to be deployed for each microservice.
    minTargetReplicas: 1
    # maxTargetReplicas is the maximum number of target replicas to be deployed for each microservice.
    maxTargetReplicas: 3
    # traceLevel specifes the trace detail level for trace.log. Supported values are ALL,FINE,INFO.
    traceLevel: "INFO"
    autoscaler:
      # cpuAverageUtilization specifies the average usage of CPU which starts the autoscaler.
      cpuAverageUtilization: 200
    resources:
      limits:
        # cpu is the maximum amount of cpu services can use.
        cpu: "2"
        # memory is the maximum amount of memory services can use.
        memory: "1024Mi"
      requests:
        # cpu is the minimum amount of cpu services require to run.
        cpu: "0.3"
        # memory is the minimum amount of memory services require to run.
        memory: "512Mi"
  # The properties listed below apply to single microservices. You can use them to override the global settings defined above for one or more microservices.
  console:
    # ingressPrefix is the prefix of the name of the endpoint of the console microservice.
    ingressPrefix: "console"
    #minTargetReplicas: 1
  agentmanager:
    # ingressPrefix is the prefix of the name of the endpoint of the agentmanager microservice.
    ingressPrefix: "agentmanager"
    #minTargetReplicas: 1
  gateway:
    # ingressPrefix is the prefix of the name of the endpoint of the gateway microservice.
    ingressPrefix: "gateway"
    #minTargetReplicas: 1
  eventmanager:
    #minTargetReplicas: 1
  audit: 
    #minTargetReplicas: 1
  toolbox: 
    #minTargetReplicas: 1
  iaa: 
    #minTargetReplicas: 1
  executor:
    enableExecutorSandbox: "false"
    #minTargetReplicas: 1
  orchestrator: 
    #minTargetReplicas: 1
    resources:
      limits:
        cpu: "2"
        memory: "1024Mi"
      requests:
        cpu: "0.3"
        memory: "1024Mi"
  scheduler: 
    #minTargetReplicas: 1
  storage: 
    #minTargetReplicas: 1
  timer: 
    #minTargetReplicas: 1
  notification:
    #minTargetReplicas: 1

hclaipilot:  
  image:
    repository: hclcr.io/uno-ea
    tag: 2.1.2.0-beta1
  
  channels:
    slackToken: ""
    slackSigningSecret: ""
    slackChannel: ""
    googleProjectId: ""
    botframeworkAppId: ""
    botframeworkAppPassword: ""

    ### To disable group check of the OIDC provider. ###
    # To be enabled when the OIDC provider is not setup with the same LDAP/User provider of the channels and is not possible to add user to it manually
    # so the email of the configured channels are manually added in the ACL
    groupless:  "false"
  
  translation:
    # Configuration for the Azure Translation API
    azure:
      # The Subscription Key for the Azure Translation API
      subscriptionKey: ""
      # The Region for the Azure Translation API
      region: ""
      # The Translation API Endpoint
      endpoint: ""
  
    # Configuration for the Google Translation API
    google:
      # The Credentials json file for the Google Translation API encoded in base64
      credentials: ""

  certificates:
    # useCustomizedCert specifies if you use custom certificates or certificates generated by cert-manager. Supported values are true and false. If you set it to false, certificates are defined by the deployment process. If you set it to true, provide the required certificates and customize the parameters listed below. 
    useCustomizedCert: false
    # customIssuer is the name of the issuer. This parameter applies if you set useCustomizedCert to false. If not specified, a self-signed issuer is created.
    customIssuer:
    # caPairSecretName is the name of the pair secret. This parameter applies if you set useCustomizedCert to false.
    caPairSecretName: ca-key-pair
    # certSecretName is the name of the secret. This parameter applies if you set useCustomizedCert to false.
    certSecretName: uno-aipilot-certificate
    # duration is the duration of the certificates before they are set to expire. This parameter applies if you set useCustomizedCert to false.
    duration: 2160h
    # renewBefore is the time before the certificate expires when the certificate manager service begins attempts to renew the certificate. This parameter applies if you set useCustomizedCert to false.
    renewBefore: 360h
    # organization is the organization label within the certificates. This parameter applies if you set useCustomizedCert to false.
    organization: hcl

  pilotCore:
    # replicaCount is the number of replicas for the pilot core service.
    replicaCount: 1
    resources:
      limits:
        cpu: "1"
        memory: 2500Mi
      requests:
        cpu: "0.5"
        memory: 2000Mi

  pilotNlg:
    # replicaCount is the number of replicas for the pilot nlg service.
    replicaCount: 1
    resources:
      limits:
        cpu: "0.3"
        memory: 500Mi
      requests:
        cpu: "0.1"
        memory: 300Mi
  
  pilotActions:
    # replicaCount is the number of replicas for the pilot actions service.
    replicaCount: 1
    resources:
      limits:
        cpu: "0.3"
        memory: 300Mi
      requests:
        cpu: "0.1"
        memory: 200Mi
  
  rag:
    certificates:
      # useCustomizedCert specifies if you use custom certificates or certificates generated by cert-manager. Supported values are true and false. If you set it to false, certificates are defined by the deployment process. If you set it to true, provide the required certificates and customize the parameters listed below. 
      useCustomizedCert: false
      # customIssuer is the name of the issuer. This parameter applies if you set useCustomizedCert to false. If not specified, a self-signed issuer is created.
      customIssuer:
      # caPairSecretName is the name of the pair secret. This parameter applies if you set useCustomizedCert to false.
      caPairSecretName: ca-key-pair
      # certSecretName is the name of the secret. This parameter applies if you set useCustomizedCert to false.
      certSecretName: uno-aipilot-rag-certificate
      # duration is the duration of the certificates before they are set to expire. This parameter applies if you set useCustomizedCert to false.
      duration: 2160h
      # renewBefore is the time before the certificate expires when the certificate manager service begins attempts to renew the certificate. This parameter applies if you set useCustomizedCert to false.
      renewBefore: 360h
      # organization is the organization label within the certificates. This parameter applies if you set useCustomizedCert to false.
      organization: hcl
    
    hpa:
      minReplicas: 1  # Minimum number of replicas
      maxReplicas: 2  # Maximum number of replicas

    resources:
      limits:
        cpu: "0.8"  # CPU limit
        memory: "1024Mi"  # Memory limit
      requests:
        cpu: "0.2"  # CPU request
        memory: "256Mi"  # Memory request

    container:
      registry: hclcr.io/uno-ea # Image name
      tag: 2.1.2.0-beta1  # Image tag
    authorization:
      # The URL of the OpenID Connect (OIDC) server for the RAG service to authenticate the jwt token
      oidcServerURL: "https://uno-keycloak-ssl:8843"
  pgvector:
      # Image Configuration
      image:
        # The registry where the pgvector image is hosted
        registry: hclcr.io/uno-ea
        # The repository name for the pgvector image
        repository: pgvector
        # The tag/version of the pgvector image
        tag: 17
        # The secret used to pull the image from the registry
      pullSecrets:
        - "sa-{{ .Release.Namespace }}"
      auth:
        # The existing secret containing the PostgreSQL password Change the value if you want to use a different secret
        existingSecret: "{{ .Release.Name }}-postgres-password-secret"
        # The username for PostgreSQL authentication
        username: "aipilot"
        # The database name to be used for the rag service
        database: "vector_db"

      tls:
        # Enable TLS for secure connections
        enabled: true
        # The secret containing TLS certificates, Change the value if you want to use custom certificates
        certificatesSecret: "{{ .Release.Name }}-postgres-certificates-secret"
        # The filename Inside the secret for the TLS certificate
        certFilename: tls.crt
        # The filename  Inside the secret for the CA certificate
        certCAFilename: ca.crt
        # The secret name for the CA to be used to sign the certificatesSecret, Must be the same as the value of caPairSecretName in the certificates section
        # Change if you want to use a custom CA to sign the certificates
        caPairSecretName: ca-key-pair
        # must be equal  to the common name(CN) of the certificate used by pilot for the connection to the database
        pilotCertCommonName : "aipilot"
        # must be equal of the common name(CN) of the certificate used by rag for the connection to the database
        ragCertCommonName: "rag"
      
    