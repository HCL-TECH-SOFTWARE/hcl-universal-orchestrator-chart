# *******************************************************************************
# Licensed Materials - Property of HCL
# (c) Copyright HCL Technologies Ltd. 2024. All Rights Reserved.
#
# Note to U.S. Government Users Restricted Rights:
# Use, duplication or disclosure restricted by GSA ADP Schedule
# *******************************************************************************

replicaCount: 1

global:
  uno:
    engineHost: ""
    enginePort: ""
  
  hclImagePullSecret: regcred

# Channels Configuration
channels:
  ### Slack Configuration ###
  slackToken: ""
  slackSigningSecret: ""
  slackChannel: ""
  
  ### Google Chat Configuration ###
  googleProjectId: ""

  ### Microsoft Teams Configuration ###
  botframeworkAppId: ""
  botframeworkAppPassword: ""

  ### To disable group check of the OIDC provider. ###
  # To be enabled when the OIDC provider is not setup with the same LDAP/User provider of the channels and is not possible to add user to it manually
  # so the email of the configured channels are manually added in the ACL
  groupless:  "false"

translation:
  # Configuration for the Azure Translation API
  azure:
    # The Subscription Key for the Azure Translation API
    subscriptionKey: ""
    # The Region for the Azure Translation API
    region: ""
    # The Translation API Endpoint
    endpoint: ""

  # Configuration for the Google Translation API
  google:
    # The Credentials json file for the Google Translation API encoded in base64
    credentials: ""

#Version Tracking
track: dev

# Pilot Core Configuration
pilotCore:
  # Name of the core service
  name: core
  #Image name
  imageName: core
  # Deployment strategy
  strategy:
    type: Recreate
  # The port on which the core service will be exposed
  port: 5005
  # The number of replicas for the core service
  replicaCount: 1
  # Resource Configuration
  resources:
    limits:
      cpu: 1000m
      memory: 2500Mi
    requests:
      cpu: 500m
      memory: 2000Mi

# Configuration for the NLG service
pilotNlg:
  # Name of the NLG service
  name: nlg
  # Image name
  imageName: core
  # Deployment strategy
  strategy:
    type: Recreate
  # The port on which the NLG service will be exposed
  port: 5001
  # The number of replicas for the NLG service
  replicaCount: 1
  # Resource Configuration
  resources:
    limits:
      cpu: 500m
      memory: 500Mi
    requests:
      cpu: 100m
      memory: 300Mi

# Configuration for the Actions service
pilotActions:
  # Name of the Actions service
  name: actions
  # Image name
  imageName: core
  # Deployment strategy
  strategy:
    type: Recreate
  # The port on which the Actions service will be exposed
  port: 5055
  # The number of replicas for the Actions service
  replicaCount: 1
  # Resource Configuration
  resources:
    limits:
      # Maximum CPU allocation
      cpu: 300m
      # Maximum memory allocation
      memory: 300Mi
    requests:
      # Minimum CPU allocation
      cpu: 100m
      # Minimum memory allocation
      memory: 200Mi

certificates:
  # No enable if you want to use customized certificates
  useCustomizedCert: false 
  # The secret name containing the CA to be used to sign the certificatesSecret
  caPairSecretName:
  # To enable if you want to use a custom issuer
  customIssuer: false
  # The organization name for the certificates
  organization: hcl
  # To select the duration before the certificates are renewed
  renewBefore: 360h
  # The duration for which the certificates are valid
  duration: 2160h
  # If you are using a custom issuer, specify the issuer name
  issuerName: ""
  # The secret name of the certificates secret
  certSecretName : ""


#To add configuration for the authorization mechanism
authorization:
  #EXAMPLE HCL_AUTHORIZATION_HTTPS___PILOT_CORE_5005: <secret-name >
  certs:
    #HCL_AUTHORIZATION_HTTPS___PILOT_CORE_5005: pilot-cert
    #HCL_AUTHORIZATION_HTTPS___WAJWT_API: /opt/certs/jwt/uno-jwt.crt
    #HCL_AUTHORIZATION_HTTPS___WAJWT_APIGATEWAY: /opt/certs/jwt/uno-jwt.crt
    #HCL_AUTHORIZATION_TEST: /opt/certs/jwt/pilot-jwt.crt

  # TO ENABLE OIDC AUTHENTICATION
  oidcServerURL: ""

# Configuration for the images used in the deployment
image:
  # The registry where the image is hosted
  repository: hclcr.io/slt/uno
  # The tag/version of the images
  tag: 2.1.0.0
  # The Pull Policy for the images
  imagePullPolicy: Always

# to configure if you want a custom service account
serviceAccount:
  name: ""
  create: false

# If you don't want to use the .Release.Name as the prefix on the name of the service specify the name here
nameOverride: ""

# To add any additional labels to the deployment
podAnnotations: {}

# To configure the security context for the deployment
podSecurityContext: {}

# To configure the node selector for the deployment
nodeSelector: {}

# To configure the tolerations for the deployment
tolerations: []

# To configure the affinity for the deployment
affinity: {}

additionalPullSecret : ""
##### SubChart Configuration #####


# Configuration for the rag subchart
rag:
  # Certificates Configuration
  certificates:
    # To enable if you want to use customized certificates
    useCustomizedCert: false
    # To enable if you want to use a custom issuer
    customIssuer: false
    # If you are using a custom issuer, specify the issuer name
    issuerName: ""
    # The organization name for the certificates
    organization: hcl
    # To select the duration before the certificates are renewed
    renewBefore: 360h
    # The duration for which the certificates are valid
    duration: 2160h
    # The secret name containing the CA to be used to sign the certificatesSecret 
    # By default, it uses the same CA created by the core service
    caPairSecretName: "{{ .Release.Name }}-aipilot-selfsigned-ca"

  # Configuration for the rag image
  container:
    # The registry where the image is hosted
    registry: "hclcr.io/slt/uno"
    # The tag used in the image
    tag: 2.1.0.0  
    # The image name
    image: "hcl-aipilot-backend"
  # The name of the service of the pgvector
  vectordb:
    name: "pgvector" 
  # The name of the service of the rag
  app:
    name: "rag-service"  # App name
  # The postgres user that will be used by the rag service
  config:
    POSTGRES_USER: "aipilot"
  
  # Authorization Configuration #
  #By default, It will enable core jwt and any jwt signed by the oidc server 
  authorization:
      # JWKS endpoint configuration
      other:
        HCL_AUTHORIZATION_HTTPS___PILOT_CORE_5005: "https://{{ .Release.Name }}-core:5005/jwks"
      # The OIDC server URL (make sure to not include the realms in the url)
      oidcServerURL: "https://uno-keycloak-ssl:8843"


#### Configuration for the pgvector subchart ####
pgvector:
  # Image Configuration
  image:
    # The registry where the pgvector image is hosted
    registry: hclcr.io/slt/uno
    # The repository name for the pgvector image
    repository: pgvector
    # The tag/version of the pgvector image
    tag: 17
    # The secret used to pull the image from the registry
    pullSecrets: 
      - '{{ include "aipilot.pgvector.pull.secret" $ }}'
  auth:
    # The existing secret containing the PostgreSQL password
    existingSecret: '{{ include "aipilot.pgvector.credentials.secret.name" $ }}'
    # The username for PostgreSQL authentication
    username: "aipilot"
    # The database name to be used
    database: "vector_db"
  
  tls:
    # Enable TLS for secure connections
    enabled: true
    # The secret containing TLS certificates
    certificatesSecret: '{{ include "aipilot.pgvector.cert.secret.name" $ }}'
    # The filename Inside the secret for the TLS certificate
    certFilename: tls.crt
     # The filename  Inside the secret for the TLS certificate key
    certKeyFilename: tls.key
    # The filename  Inside the secret for the CA certificate
    certCAFilename: ca.crt
    # The secret name for the CA to be used to sign the certificatesSecret
    caPairSecretName: '{{ include "aipilot.pgvector.cert.default.ca.name" $ }}'
    # certCommonName is the common name of the certificate used by pilot for the connection to the database
    pilotCertCommonName : "aipilot"
    # ragCertCommonName is the common name of the certificate used by rag for the connection to the database
    ragCertCommonName: "rag"
  # Adding the volume permissions for the pgvector and changing the data directory
  volumePermissions:
    enabled: true
  postgresqlDataDir: /bitnami/postgresql/data-17
